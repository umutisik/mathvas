"{\"enteredCode\":\"-- this is the function that will be drawn \\ntheFunctionToDraw = tilefs finonum f\\n\\nfinonum = 11\\n\\nfff1 x y = norma x \\nfff2 x y = norma y\\n\\ntilefs :: Integer -> (Integer -> Integer -> R -> R -> R) -> R -> R -> R\\ntilefs k f x y =  let fk = fromIntegral k\\n                      st tt = (floorf ((fk)*(norma tt)))\\n                      n = round $ (st x)\\n                      m = round $ (st y)\\n                      norx = norma x\\n                      nory = norma y\\n                      adjustedx = unorma (fk*norx - fromIntegral n) \\n                      adjustedy = unorma (fk*nory - fromIntegral m)\\n                  in f n m adjustedx adjustedy\\n                  \\n                  \\n--f n m x y = (roundints n m)/10\\nf n m x y = spi (8 + 1.5*(roundints n m)) x y\\n\\nroundints :: Integer -> Integer -> R\\nroundints n m =  (sqrt $ (n'^2+m'^2))\\n                     where fn =(finum/(finum-1)) * fromIntegral n\\n                           fm =(finum/(finum-1)) * fromIntegral m\\n                           finum = fromIntegral finonum\\n                           n' = fn - (finum/2)\\n                           m' = fm - (finum/2)\\n\\ncirc r x y = if x^2+y^2 < r^2 then 0 else 1                   \\n                  \\n                  \\n                  \\nspi :: R -> R -> R -> R\\nspi k x y = if x<0 then ((strip (fst xypair) (snd xypair)))\\n                   else ((strip (fst xypair) (snd xypair)))\\n              where xypair = rotate (k*(distanceToOrigin x y )) x y\\n\\ndistanceToOrigin :: R -> R -> R\\ndistanceToOrigin x y = sqrt (x^2+y^2)\\n\\nstrip x y = if ((abs x < 1*y) && y > 0) then 0 else 1\\n\\n                  \\n                  \\n                  \\ncheckers :: R -> R -> R -> R\\ncheckers k x y = let s2 tt = stepso 2 (modulus 1 $ k*(norma tt))\\n                 in  fmod ((s2 x) + (s2 y)) 2\\n\\nrotate :: R -> R -> R -> (R,R)\\nrotate theta x y = let ct = cos theta\\n                       st = sin theta\\n                   in (x*ct - y*st, x*st + y*ct)\\n\\nnorma :: R -> R\\nnorma x = (x+1)/2\\nunorma :: R -> R\\nunorma y = 2*y-1\\n\\n(kombin h f g) x y = if h x y > 0.5 then f x y else g x y \\n\\nmodulus k x = x - (floorf (x/k))*k\\nsteps 1 x = 0 \\nsteps k x = (1/(k-1))*(floorf ((k)*(norma x)))\\nstepso k x = (1/(k-1))*(floorf ((k)*(x)))\\nfloorf x = fromInteger (floor x)\\n\\nnaivstep k x = (floorf ((k)*(norma x)))\\n\\nfmod x k = fromInteger $ (floor x) `mod` k\\n\\n\\n\\n\\n\",\"email\":\"umutisik@gmail.com\",\"snippetTitle\":\"NiceRepeat\",\"username\":\"umutisik\",\"activity\":\"Grayscale\",\"snippetId\":\"58\"}"