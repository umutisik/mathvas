window.Editor = (function() {

    var editor = ace.edit("editor");

    function initEditor() {
        var lineCount = 30;
    
        editor.setOptions({
            minLines: lineCount,
            maxLines: lineCount,
        });

        
        editor.setTheme("ace/theme/monokai");
        editor.getSession().setMode("ace/mode/haskell");
    }

    function clean() {
            editor.session.getUndoManager().reset();
    }

    function isClean() {
            return editor.session.getUndoManager().isClean();
    }

    function resetEditor(id) {
        editor.setValue("");
    }

    function getValue() {
        return editor.getValue();
    }

    function setValue(v) {
        editor.setValue(v);
    }

    return {
        initEditor: initEditor,
        resetEditor: resetEditor,
        setValue: setValue,
        getValue: getValue,
        clean: clean,
        isClean: isClean,
    };
})();






window.Fork = (function() {
    function hasFile() {
        if (localStorage.forkedFile) {
            return true;
        }
        return false;
    }

    function setFile(file) {
        localStorage.forkedFile = JSON.stringify(file);
    }

    function getFile() {
        if (!hasFile()) {
            return null;
        }

        var file = JSON.parse(localStorage.forkedFile);
        delete localStorage.forkedFile;
        return file;
    }

    return {
        hasFile: hasFile,
        setFile: setFile,
        getFile: getFile,
    };
})();


(function() {
    
    if (Fork.hasFile()) {
        // Initialize editor with forked file
        Editor.initEditor();
        var file = Fork.getFile();
        Editor.setValue(file);
    } else {
        Editor.initEditor();
    }

})();

